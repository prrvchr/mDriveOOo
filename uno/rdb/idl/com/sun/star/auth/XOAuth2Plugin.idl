/*
╔════════════════════════════════════════════════════════════════════════════════════╗
║                                                                                    ║
║   Copyright (c) 2020 https://prrvchr.github.io                                     ║
║                                                                                    ║
║   Permission is hereby granted, free of charge, to any person obtaining            ║
║   a copy of this software and associated documentation files (the "Software"),     ║
║   to deal in the Software without restriction, including without limitation        ║
║   the rights to use, copy, modify, merge, publish, distribute, sublicense,         ║
║   and/or sell copies of the Software, and to permit persons to whom the Software   ║
║   is furnished to do so, subject to the following conditions:                      ║
║                                                                                    ║
║   The above copyright notice and this permission notice shall be included in       ║
║   all copies or substantial portions of the Software.                              ║
║                                                                                    ║
║   THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,                  ║
║   EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES                  ║
║   OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.        ║
║   IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY             ║
║   CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,             ║
║   TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE       ║
║   OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.                                    ║
║                                                                                    ║
╚════════════════════════════════════════════════════════════════════════════════════╝
 */

#ifndef __com_sun_star_auth_XOAuth2Plugin_idl__
#define __com_sun_star_auth_XOAuth2Plugin_idl__

#include <com/sun/star/uno/XInterface.idl>
#include <com/sun/star/beans/XPropertySet.idl>
#include <com/sun/star/sheet/XVolatileResult.idl>


module com { module sun { module star { module auth {

interface XOAuth2Plugin: com::sun::star::uno::XInterface
{

    string browserOpen([in] com::sun::star::beans::XPropertySet Document,
                       [in] string Browser,
                       [in] string Path,
                       [in] any Init,
                       [in] sequence <any> Options);

    string browserClick([in] string Session,
                        [in] string By,
                        [in] string Path,
                        [in] any Url,
                        [in] any Init,
                        [in] any Wait);

    string browserField([in] string Session,
                        [in] string By,
                        [in] string Path,
                        [in] string Value,
                        [in] any Url,
                        [in] any Init,
                        [in] any Wait);

    string browserForm([in] string Session,
                       [in] sequence <sequence <string> > Form,
                       [in] any Url,
                       [in] any Init,
                       [in] any Wait);

    string browserContent([in] string Session,
                          [in] any Url,
                          [in] any Encoding);

    string httpAuth([in] string Name,
                    [in] any Password);

    string httpContent([in] string Url,
                       [in] any Method,
                       [in] any Encoding,
                       [in] any Parameters);

    sequence <sequence <string> > parseHtml([in] string Data,
                                            [in] string Path,
                                            [in] any BaseUrl);

    sequence <sequence <string> > parseXml([in] string Data,
                                           [in] string Path,
                                           [in] any BaseUrl);

    sequence <sequence <string> > parseJson([in] string Data,
                                            [in] string Path);

    sequence <sequence <string> > javaScript2Xml([in] string Data,
                                                 [in] any Path);

    sequence <sequence <string> > xml2Json([in] string Data,
                                           [in] any Path);

    sequence <sequence <string> > javaScript2Json([in] string Data,
                                                  [in] any Path);

    sequence <sequence <string> > dublinCore2Json([in] string Data,
                                                  [in] any BaseUrl);

    sequence <sequence <string> > jsonLd2Json([in] string Data,
                                              [in] any BaseUrl);

    sequence <sequence <string> > microData2Json([in] string Data,
                                                 [in] any BaseUrl);

    sequence <sequence <string> > microFormat2Json([in] string Data,
                                                   [in] any BaseUrl);

    sequence <sequence <string> > openGraph2Json([in] string Data,
                                                 [in] any BaseUrl);

    sequence <sequence <string> > rdfa2Json([in] string Data,
                                            [in] any BaseUrl);

    sequence <sequence <any> > flattenJson([in] string Data,
                                           [in] any TypeName,
                                           [in] any Path,
                                           [in] any Separator);

    sequence <sequence <any> > splitJson([in] string Data,
                                         [in] any TypeName,
                                         [in] any Path,
                                         [in] any Separator);

};

}; }; }; };

#endif

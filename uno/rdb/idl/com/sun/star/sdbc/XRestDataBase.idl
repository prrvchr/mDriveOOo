#ifndef __com_sun_star_sdbc_XRestDataBase_idl__
#define __com_sun_star_sdbc_XRestDataBase_idl__

#include <com/sun/star/uno/XInterface.idl>
#include <com/sun/star/util/XCloseListener.idl>
#include <com/sun/star/auth/XRestKeyMap.idl>
#include <com/sun/star/sdbc/XConnection.idl>
#include <com/sun/star/sdbc/XPreparedStatement.idl>
#include <com/sun/star/util/DateTime.idl>
#include <com/sun/star/beans/Optional.idl>

module com { module sun { module star { module sdbc {

interface XRestDataBase: com::sun::star::uno::XInterface
{

    string createDataBase();

    void storeDataBase([in] string Url);

    void addCloseListener([in] ::com::sun::star::util::XCloseListener Listener);

    void shutdownDataBase([in] boolean Compact);

    ::com::sun::star::uno::XInterface getDataSource();

    sequence<string> getUserFields();

    boolean createUser([in] string Name,
                       [in] string Password);

    ::com::sun::star::auth::XRestKeyMap selectUser([in] string Name);

    ::com::sun::star::auth::XRestKeyMap insertUser([in] string UserId,
                                                   [in] string UserName,
                                                   [in] string Group);

    ::com::sun::star::auth::XRestKeyMap getFieldsMap([in] string Method,
                                                     [in] boolean Reverse);

    sequence<string> getUpdatedGroups([in] ::com::sun::star::uno::XInterface User,
                                      [in] string Prefix);

    void createGroupView([in] ::com::sun::star::uno::XInterface User,
                         [in] string Name,
                         [in] long Group);

    void dropGroupView([in] ::com::sun::star::uno::XInterface User,
                       [in] string Name);

    void updateSyncToken([in] ::com::sun::star::uno::XInterface User,
                         [in] string Token,
                         [in] string Value,
                         [in] ::com::sun::star::util::DateTime TimeStamp);

    ::com::sun::star::sdbc::XPreparedStatement getDataSourceCall([in] string Name);

    ::com::sun::star::sdbc::XPreparedStatement getPreparedCall([in] string Name);

    void closeDataSourceCall();

    [attribute, readonly] ::com::sun::star::sdbc::XConnection Connection;

};

}; }; }; };

#endif

100=OptionsHandler.callHandlerMethod()
101=An unexpected exception: {} has occurred, producing a series of exceptions: {}

200=OptionsManager.__init__()
201=OptionManger has been correctly initialized.

210=OptionsManager.loadSetting()
211=OptionManger has been correctly reloaded.

220=OptionsManager.saveSetting()
221=OptionManger saved options {} and logging {}.


1000=Connect URL ERROR
1001=Authentication ERROR
1002=Authorization ERROR
1003=Setup ERROR
1004=Network ERROR
1005=DataBase ERROR
1006=Provider ERROR


1100=Driver.__init__()
1101=Driver initialization completed

1110=Driver.connect()
1111=Loading the driver for the URL {}
1112=Invalid protocol <{}>
1113=Invalid user account and/or password.
1114=Invalid user account <{}>
1115=Hsqldb version {} database is loaded, the user {} is connected.
1116=Driver.connect() ERROR: {} - {}

1120=Driver._getDataSource()
1121=The extension {} was not found. You must install this extension to use {}.
1122=Version {} of extension {} is obsolete. You need to update this extension to version: {}.
1123=Unable to connect to URL {}. An SQLException was thrown with the message: {}.
1124=HsqlDB driver version {} is obsolete. You need to update this driver to version {} or higher.

1130=Driver._getUrlParts()
1131=Invalid protocol <{}>


1400=DataSource.getConnection()
1401=The user {} has abandoned the OAuth2 authorization wizard, the {} extension cannot continue without this authorization!!!


1500=User.__init__()
1501=The user {} has abandoned the OAuth2 authorization wizard, the {} extension cannot continue without this authorization!!!
1502=Can't connect to server <{}>. Is the network offline?
1503=Can't insert user {} in DataBase


1600=Provider.raiseForStatus()
1601=HTTP request <{}> returned status code {} for user {} on URL {} with content {}

1610=Provider.initUserBooks()
1611=Can't retrieve AddressBook for user {}, the server {} don't support AddressBook!!!

1620=Provider._getDiscoveryUrl()
1621=HTTP request <{}> for user {} on URL {} cannot retrieve <Location> on headers {}

1640=Provider._getNewUserId()
1641=User {} with password {} cannot connect to server {} at URL {}
1642=User {} cannot find on URL {} a CardDAV compatible server

1650=Provider._supportAddressbook()
1651=HTTP request <{}> for user {} on URL {} cannot retrieve <DAV> on headers {}

1660=Provider._getAddressbooksUrl()
1661=HTTP request <{}> for user {} on URL {} cannot parse content {}


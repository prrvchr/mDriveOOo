#ifndef __com_sun_star_ucb_XRestIdentifier_idl__
#define __com_sun_star_ucb_XRestIdentifier_idl__

#include <com/sun/star/uno/XInterface.idl>
#include <com/sun/star/ucb/XRestUser.idl>
#include <com/sun/star/auth/XRestKeyMap.idl>
#include <com/sun/star/ucb/XSimpleFileAccess.idl>
#include <com/sun/star/sdbc/XPreparedStatement.idl>
#include <com/sun/star/ucb/ContentInfo.idl>
#include <com/sun/star/uri/XUriReference.idl>

module com { module sun { module star { module ucb {

interface XRestIdentifier: com::sun::star::uno::XInterface
{

    boolean isRoot();
    boolean isFolder();
    boolean isValid();
    ::com::sun::star::uri::XUriReference getUri();
    ::com::sun::star::ucb::XRestIdentifier createNewIdentifier([in] string ContentType);
    ::com::sun::star::uno::XInterface getContent();
    ::com::sun::star::sdbc::XPreparedStatement getFolderContent([in] ::com::sun::star::auth::XRestKeyMap Content);
    string getDocumentContent([in] ::com::sun::star::ucb::XSimpleFileAccess Sf,
                              [in] ::com::sun::star::auth::XRestKeyMap Content,
                              [out] long Size);
    void insertNewContent([in] ::com::sun::star::uno::XInterface Request,
                          [in] ::com::sun::star::auth::XRestKeyMap Content);
    void setTitle([in] string Value);
    sequence<::com::sun::star::ucb::ContentInfo> getCreatableContentsInfo();

    [attribute, readonly] ::com::sun::star::ucb::XRestUser User;
    [attribute, readonly] ::com::sun::star::auth::XRestKeyMap MetaData;
    [attribute, readonly] string Id;
    [attribute, readonly] string ParentId;
    [attribute, readonly] string ParentURI;
    [attribute, readonly] boolean IsNew;

};

}; }; }; };

#endif
